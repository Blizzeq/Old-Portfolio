{"version":3,"file":"static/js/442.92cc0c3a.chunk.js","mappings":"yMAqGA,UA9FA,SAAiBA,GAEb,IAAOC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,UAEDG,GAAOC,EAAAA,EAAAA,UAEb,GAAoCC,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAeMC,EAAY,SAACC,GACfA,EAAEC,iBACFH,GAAe,GAGfI,EAAAA,GAAAA,SAAiB,kBAAmB,mBAAoBZ,EAAKa,QAAS,qBACjEC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAOG,MACnBd,EAAc,GACdI,GAAe,EAClB,IAAE,SAACW,GACAH,QAAQC,IAAIE,EAAMD,MAClBd,EAAc,EACjB,GACR,EAGD,OACI,gBAAKgB,UAAS,kBAAavB,GAA3B,UACI,gBAAKuB,UAAW,kBAAhB,UACI,SAAC,IAAD,CAAMA,UAAW,eAAjB,UACI,UAAC,IAAD,CAAMC,YAAU,EAAChB,UAAWA,EAAWiB,IAAKtB,EAAMuB,SAjC7C,SAACb,IAEW,IADhBA,EAAEc,cACNC,iBACLf,EAAEC,iBACFD,EAAEgB,mBAEFjB,EAAUC,GAGdJ,GAAa,EAChB,EAwBqBc,UAAW,eADjB,WAGI,UAAC,UAAD,CAAYA,UAAU,eAAeO,UAAU,iBAA/C,WACI,SAAC,UAAD,oBACA,SAAC,YAAD,CAAcC,UAAQ,EAACC,KAAK,OAAOC,YAAY,OAAOC,KAAK,eAC3D,SAAC,qBAAD,CAAuBF,KAAK,UAA5B,8CAKJ,UAAC,UAAD,CAAYT,UAAU,eAAeO,UAAU,iBAA/C,WACI,SAAC,UAAD,6BACA,SAAC,YAAD,CAAcC,UAAQ,EAACC,KAAK,QAAQC,YAAY,QAAQC,KAAK,gBAC7D,SAAC,SAAD,CAAWX,UAAU,aAArB,4DAGA,SAAC,qBAAD,CAAuBS,KAAK,UAA5B,+CAKJ,UAAC,UAAD,CAAYT,UAAU,eAAeO,UAAU,+BAA/C,WACI,SAAC,UAAD,uBACA,SAAC,YAAD,CAAcC,UAAQ,EAACI,GAAG,WAAWC,KAAM,EAAGH,YAAY,UAAUC,KAAK,aACzE,SAAC,qBAAD,CAAuBF,KAAK,UAA5B,gDAIY,IAAf1B,IAAoC,IAAhBI,GAAwB,SAAC,IAAD,CAAQ2B,QAAQ,UAAUL,KAAK,SAAST,UAAW,iBAAnD,wBAEjC,KACI,IAAfjB,IAAoC,IAAhBI,GAAuB,SAAC,KAAD,CAAYa,UAAU,OAAOe,MAAO,UAAWC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,YAAY,OAArG,UACxC,iBAAMnB,UAAU,kBAAhB,0BACY,KACA,IAAfjB,IAAoB,SAAC,IAAD,CAAO+B,QAAS,UAAWd,UAAW,QAAtC,gFAGL,IAAfjB,IAAoB,SAAC,IAAD,CAAO+B,QAAS,SAAUd,UAAW,QAArC,yDAQ5C,C","sources":["Components/Contact.js"],"sourcesContent":["import React, {useContext, useRef, useState} from 'react';\r\nimport {ThemeContext} from \"../App\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport {Alert, Button, Card, Form} from \"react-bootstrap\";\r\nimport {MDBSpinner} from \"mdb-react-ui-kit\";\r\n\r\n\r\nfunction Contact(props) {\r\n\r\n    const {themeMode} = useContext(ThemeContext);\r\n\r\n    const form = useRef();\r\n\r\n    const [valueCheck, setValueCheck] = useState(0);\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            sendEmail(e);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n        setShowSpinner(true);\r\n\r\n\r\n        emailjs.sendForm('service_afpsyxl', 'template_v4qx4u4', form.current, 'KMHJ2SCdbVqmNLQ9K')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n                setValueCheck(1);\r\n                setShowSpinner(false);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n                setValueCheck(2);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={`Contact-${themeMode}`}>\r\n            <div className={'Contact-Content'}>\r\n                <Card className={'Card-Contact'}>\r\n                    <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                          className={'Form-Contact'}>\r\n\r\n                        <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Name\" name=\"user_name\"/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid name.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\"/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                I'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid email.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"form-content\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Message</Form.Label>\r\n                            <Form.Control required as=\"textarea\" rows={2} placeholder=\"Message\" name=\"message\"/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid message.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        {valueCheck === 0 && showSpinner === false ? <Button variant=\"primary\" type=\"submit\" className={'Button-Contact'}>\r\n                            Contact me\r\n                        </Button> : null}\r\n                        {valueCheck === 0 && showSpinner === true ? <MDBSpinner className='me-2' color={'primary'} style={{ width: '6.5vh', height: '6.5vh', borderWidth:'1vh' }}>\r\n                            <span className='visually-hidden'>Loading...</span>\r\n                        </MDBSpinner> : null}\r\n                        {valueCheck === 1 && <Alert variant={\"success\"} className={'Alert'}>\r\n                            Message sent successfully! I will contact you as soon as possible.\r\n                        </Alert>}\r\n                        {valueCheck === 2 && <Alert variant={\"danger\"} className={'Alert'}>\r\n                            Message not sent! Please try again.\r\n                        </Alert>}\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n"],"names":["props","themeMode","useContext","ThemeContext","form","useRef","useState","valueCheck","setValueCheck","validated","setValidated","showSpinner","setShowSpinner","sendEmail","e","preventDefault","emailjs","current","then","result","console","log","text","error","className","noValidate","ref","onSubmit","currentTarget","checkValidity","stopPropagation","controlId","required","type","placeholder","name","as","rows","variant","color","style","width","height","borderWidth"],"sourceRoot":""}